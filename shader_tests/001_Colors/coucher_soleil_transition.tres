[gd_resource type="Shader" format=3 uid="uid://diyn1b764ssmu"]

[resource]
code = "shader_type canvas_item;

uniform vec2 uv_resolution = vec2(1.0);
uniform vec3 sun_high : source_color;
uniform vec3 sun_low : source_color;
uniform vec3 sun_gone : source_color;
uniform float time_speed = 1.0;

float easeInQuad( float x ) {
	return x * x;
}

float easeOutSine(float x){
	return sin((x * PI) / 2.0);
}


void fragment() {
	vec2 uv = UV / uv_resolution;
	uv.y = 1.0 - uv.y;

	vec3 color = vec3(0.0);
	// Transition lineaire

	float i = 0.0;
	i = easeInQuad(abs(sin(TIME * time_speed)));

	vec3 pct = vec3( i ) ;
	pct.r = smoothstep(0.0,1.0, i) * i;
	pct.g = easeOutSine(i);
	pct.b = easeInQuad(i);

	color = mix(sun_high, sun_gone, pct);

	// Good Result
	//vec3 colA = vec3(0.0);
	//vec3 colB = vec3(1.0);
	//pct.r = smoothstep(0.0,1.0, uv.x) - uv.x * 0.2;
	//pct.g = sqrt(uv.x) * uv.x  - uv.x * 0.25;
	//pct.b = easeInQuad(uv.x * 0.5) + 0.15;
	//color = mix(colA, colB, pct);

	COLOR = vec4(color, 1.0);
}

"
